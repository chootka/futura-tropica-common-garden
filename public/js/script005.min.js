(function(a) {
    a.belowthefold = function(c, d) {
        var b = a(window).height() + a(window).scrollTop();
        return b <= a(c).offset().top - d.threshold
    }
    ;
    a.abovethetop = function(b, c) {
        var d = a(window).scrollTop();
        return d >= a(b).offset().top + a(b).height() - c.threshold
    }
    ;
    a.rightofscreen = function(c, d) {
        var b = a(window).width() + a(window).scrollLeft();
        return b <= a(c).offset().left - d.threshold
    }
    ;
    a.leftofscreen = function(b, c) {
        var d = a(window).scrollLeft();
        return d >= a(b).offset().left + a(b).width() - c.threshold
    }
    ;
    a.inviewport = function(d, e) {
        var c = a(d);
        var i = c.offset();
        var h = a(window);
        var g = h.scrollTop();
        var b = e.threshold;
        if (i.top - b < g) {
            if (i.top + c.height() + b >= g) {} else {
                return false
            }
        } else {
            if (i.top - b <= g + h.height()) {} else {
                return false
            }
        }
        var f = h.scrollLeft();
        if (i.left - b < f) {
            if (i.left + c.width() + b >= f) {} else {
                return false
            }
        } else {
            if (i.left - b <= f + h.width()) {} else {
                return false
            }
        }
        return true
    }
    ;
    a.extend(a.expr[":"], {
        "below-the-fold": function(c, d, b) {
            return a.belowthefold(c, {
                threshold: 0
            })
        },
        "above-the-top": function(c, d, b) {
            return a.abovethetop(c, {
                threshold: 0
            })
        },
        "left-of-screen": function(c, d, b) {
            return a.leftofscreen(c, {
                threshold: 0
            })
        },
        "right-of-screen": function(c, d, b) {
            return a.rightofscreen(c, {
                threshold: 0
            })
        },
        "in-viewport": function(c, d, b) {
            return a.inviewport(c, {
                threshold: 0
            })
        }
    })
}
)(jQuery);
(function(c) {
    var a = c.scrollTo = function(d, f, g) {
        c(window).scrollTo(d, f, g)
    }
    ;
    a.defaults = {
        axis: "xy",
        duration: parseFloat(c.fn.jquery) >= 1.3 ? 0 : 1
    };
    a.window = function(d) {
        return c(window)._scrollable()
    }
    ;
    c.fn._scrollable = function() {
        return this.map(function() {
            var d = this
              , f = !d.nodeName || c.inArray(d.nodeName.toLowerCase(), ["iframe", "#document", "html", "body"]) != -1;
            if (!f) {
                return d
            }
            var g = (d.contentWindow || d).document || d.ownerDocument || d;
            return c.browser.safari || g.compatMode == "BackCompat" ? g.body : g.documentElement
        })
    }
    ;
    c.fn.scrollTo = function(f, e, d) {
        if (typeof e == "object") {
            d = e;
            e = 0
        }
        if (typeof d == "function") {
            d = {
                onAfter: d
            }
        }
        if (f == "max") {
            f = 9000000000
        }
        d = c.extend({}, a.defaults, d);
        e = e || d.speed || d.duration;
        d.queue = d.queue && d.axis.length > 1;
        if (d.queue) {
            e /= 2
        }
        d.offset = b(d.offset);
        d.over = b(d.over);
        return this._scrollable().each(function() {
            var n = this, l = c(n), m = f, j, k = {}, h = l.is("html,body");
            switch (typeof m) {
            case "number":
            case "string":
                if (/^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(m)) {
                    m = b(m);
                    break
                }
                m = c(m, this);
            case "object":
                if (m.is || m.style) {
                    j = (m = c(m)).offset()
                }
            }
            c.each(d.axis.split(""), function(q, r) {
                var t = r == "x" ? "Left" : "Top"
                  , s = t.toLowerCase()
                  , v = "scroll" + t
                  , p = n[v]
                  , g = a.max(n, r);
                if (j) {
                    k[v] = j[s] + (h ? 0 : p - l.offset()[s]);
                    if (d.margin) {
                        k[v] -= parseInt(m.css("margin" + t)) || 0;
                        k[v] -= parseInt(m.css("border" + t + "Width")) || 0
                    }
                    k[v] += d.offset[s] || 0;
                    if (d.over[s]) {
                        k[v] += m[r == "x" ? "width" : "height"]() * d.over[s]
                    }
                } else {
                    var u = m[s];
                    k[v] = u.slice && u.slice(-1) == "%" ? parseFloat(u) / 100 * g : u
                }
                if (/^\d+$/.test(k[v])) {
                    k[v] = k[v] <= 0 ? 0 : Math.min(k[v], g)
                }
                if (!q && d.queue) {
                    if (p != k[v]) {
                        i(d.onAfterFirst)
                    }
                    delete k[v]
                }
            });
            i(d.onAfter);
            function i(g) {
                l.animate(k, e, d.easing, g && function() {
                    g.call(this, f, d)
                }
                )
            }
        }).end()
    }
    ;
    a.max = function(g, j) {
        var n = j == "x" ? "Width" : "Height"
          , k = "scroll" + n;
        if (!c(g).is("html,body")) {
            return g[k] - c(g)[n.toLowerCase()]()
        }
        var o = "client" + n
          , f = g.ownerDocument.documentElement
          , d = g.ownerDocument.body;
        return Math.max(f[k], d[k]) - Math.min(f[o], d[o])
    }
    ;
    function b(d) {
        return typeof d == "object" ? d : {
            top: d,
            left: d
        }
    }
}
)(jQuery);

jQuery(function($) {
    var a = (typeof Touch == "object");
    $(".artmenu").live("click", function() {
        var d = $(this).attr("data-id");
        var e = $("#artwork" + d);
        $.scrollTo($(e), 750, {
            queue: true,
            offset: {
                top: -80,
                left: -420
            }
        });
        return false
    });
    $(".txtmenu").live("click", function() {
        var d = $(this).attr("data-id");
        var e = $("#text" + d);
        $.scrollTo($(e), 750, {
            queue: true,
            offset: {
                top: -40,
                left: -420
            }
        });
        return false
    });
    $("#artwork23").mouseenter(function() {
        var d = $(this);
        var e = $(d).attr("data-src");
        if ($(d).attr("data-loaded") !== "1") {
            $(d).attr("data-loaded", 1);
            $(d).find("iframe").attr("src", e)
        }
    });

    $(window).scroll(function(f) {
        load();
        var scrolled = $(window).scrollTop();

        $(".thing").each(function() {
            var g = $(this).attr("data-id");
            if (isElementInViewport($(this))) {
                if ($(this).attr("data-type") === "art") {
                    var e = $(".artmenu[data-id=" + g + "]");
                } else {
                    var e = $(".txtmenu[data-id=" + g + "]");
                }
                $(e).show();
            }
        });

        //distance from top to unload artwork1 and artwork2.
        if (scrolled > 5000) {
            unload($("#artwork1"));
            unload($("#artwork2"));
        }
    });

    $(".loadMore").find("a").click(function() {
        var e = $(this).attr("data-id")
          , d = $("#artwork" + e).find("iframe");
        thisNewSrc = $(this).attr("href");
        $(d).attr("src", thisNewSrc);
        $("#ull6").find("a").removeClass("a");
        $(this).addClass("bold");
        return false
    });

});


function unload(e) {
    var d = $(e).find("iframe");
    $(d).attr("src", "");
    $(e).attr("data-loaded", 0)
}

function isElementPartiallyInViewport(el) {
    // Special bonus for those using jQuery
    if (typeof jQuery !== 'undefined' && el instanceof jQuery)
        el = el[0];

    var rect = el.getBoundingClientRect();
    // DOMRect { x: 8, y: 8, width: 100, height: 100, top: 8, right: 108, bottom: 108, left: 8 }
    var windowHeight = (window.innerHeight || document.documentElement.clientHeight);
    var windowWidth = (window.innerWidth || document.documentElement.clientWidth);

    var vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);
    var horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);


    return (vertInView && horInView);
}

function isElementInViewport (el) {
    // Special bonus for those using jQuery
    if (typeof jQuery === "function" && el instanceof jQuery) {
        el = el[0];
    }

    var rect = el.getBoundingClientRect();

    return (
        rect.top >= 0 &&
        rect.left >= 0 &&
        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /* or $(window).height() */
        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /* or $(window).width() */
    );
}


function load() {
    $(".artist").each(function() {
        if (isElementPartiallyInViewport($(this))) {
            if ($(this).attr("data-loaded") !== "1") {
                var e = $(this).attr("data-src");
                $(this).attr("data-loaded", 1);
                $(this).find("iframe").attr("src", e);
                if ($(this).attr("data-youtube")) {
                    if (YouTubeAPIready) {
                        makeYoutubePlayer($(this).find("iframe").attr("id"));
                    } else {
                        youtubeQue.push($(this).find("iframe").attr("id"));
                    }
                }
                if ($(this).attr("data-vimeo")) {
                    makeVimeoPlayer($(this).find("iframe").attr("id"));
                }
            }

        } else {

            if ($(this).attr("data-loaded") === "1") {
                var g = $(this).attr("data-id");
                $(this).find("iframe").attr("src", "");
                $(this).attr("data-loaded", 0);

                if ($(this).attr("data-youtube")) {
                    unloadVideo($(this).attr("id"));
                }

                if ($(this).attr("data-vimeo")) {
                    unloadVimeo(this);
                }
            }

        }
    });
}
